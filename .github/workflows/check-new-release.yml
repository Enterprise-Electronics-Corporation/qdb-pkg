name: Check for New Release

on:
  schedule:
    - cron: "0 * * * *" # Runs every hour

jobs:
  check-release:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Get latest release
        id: get_release
        run: |
          latest_release=$(curl -s https://api.github.com/repos/questdb/questdb/releases/latest)
          latest_version=$(echo $latest_release | jq -r .tag_name)
          echo "Latest version: $latest_version"
          echo "::set-output name=latest_version::$latest_version"

      - name: Compare with previous version
        id: compare_versions
        run: |
          previous_version=$(cat .latest_release_version || echo "none")
          if [ "$previous_version" != "${{ steps.get_release.outputs.latest_version }}" ]; then
            echo "New version detected: ${{ steps.get_release.outputs.latest_version }}"
            echo "::set-output name=new_release::true"
            echo "${{ steps.get_release.outputs.latest_version }}" > .latest_release_version
          else
            echo "No new version detected."
            echo "::set-output name=new_release::false"
          fi

      - name: Trigger build workflow
        if: steps.compare_versions.outputs.new_release == 'true'
        run: |
          curl -X POST \
            -H "Accept: application/vnd.github.v3+json" \
            -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" \
            https://api.github.com/repos/Enterprise-Electronics-Corporation/qdb-pkg/dispatches \
            -d '{"event_type":"new_release"}'

      - name: Commit latest version
        if: steps.compare_versions.outputs.new_release == 'true'
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add .latest_release_version
          git commit -m "Update latest release version to ${{ steps.get_release.outputs.latest_version }}"
          git push
